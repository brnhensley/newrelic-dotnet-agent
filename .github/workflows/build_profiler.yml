name: Build .NET Agent Profiler

# Controls when the workflow will run
on:
  # temporarily disable auto execution
  #pull_request:
  #  branches: 
  #  - main
  #  - 'feature/**'
  #release:
  #  types: [ published ]
  workflow_dispatch:
  #schedule:
  #  - cron:  '0 9 * * *'

env:
  scripts_path: ${{ github.workspace }}\build\scripts
  tools_path: ${{ github.workspace }}\build\Tools
  DOTNET_NOLOGO: true

jobs:

  cancel-previous-workflow-runs:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' || ( github.event_name == 'release' && startsWith(github.ref, 'refs/tags/v') )
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check:
    name: Check for modified files
    outputs:
      run_job: ${{ steps.check_files.outputs.run_job }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD
      
          echo "========== check paths of modified files =========="
          echo "run_job=false" >> $GITHUB_OUTPUT
          git diff --name-only HEAD^ HEAD > files.> files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file != src/Agent/NewRelic/Profiler/* ]]; then
              echo "This modified file is not under the 'Profiler' folder."
            else
          echo "run_job=true" >> $GITHUB_OUTPUT
              break
            fi
          done < files.txt
        shell: bash

  build-windows-profiler:
    needs: [cancel-previous-workflow-runs, check]
    if: needs.check.outputs.run_job == 'true'
    name: Build Windows Profiler
    runs-on: windows-2019

    env:
      profiler_path: ${{ github.workspace }}\src\Agent\NewRelic\Profiler
      profiler_solution_path: ${{ github.workspace }}\src\Agent\NewRelic\Profiler\NewRelic.Profiler.sln
      output_path: ${{ github.workspace }}\src\Agent\_profilerBuild

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Clean out _profilerBuild directory
        run: |
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\*.*" -Force -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x64-Release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\x86-Release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\linux-x64-release" -Recurse -Force  -ErrorAction SilentlyContinue
          Remove-Item -Path "${{ github.workspace }}\src\Agent\_profilerBuild\linux-arm64-release" -Recurse -Force  -ErrorAction SilentlyContinue
        shell: powershell

      - name: Build x64
        run: |
          Write-Host "List NuGet Sources"
          dotnet nuget list source # For unknown reasons, this step is necessary to avoid subsequent problems with NuGet package restore
          Write-Host "MSBuild.exe -restore -m -p:Platform=x64 -p:Configuration=Release ${{ env.profiler_solution_path }}"
          MSBuild.exe -restore -m -p:Platform=x64 -p:Configuration=Release ${{ env.profiler_solution_path }}
        shell: powershell
        
      - name: Build x86
        run: |
          Write-Host "MSBuild.exe -restore -m -p:Platform=Win32 -p:Configuration=Release ${{ env.profiler_solution_path }}"
          MSBuild.exe -restore -m -p:Platform=Win32 -p:Configuration=Release ${{ env.profiler_solution_path }}
        shell: powershell

      - name: Archive Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: profiler
          path: ${{ github.workspace }}\src\Agent\_profilerBuild\**\*
          if-no-files-found: error

  build-linux-x64-profiler:
    needs: [cancel-previous-workflow-runs, check]
    if: needs.check.outputs.run_job == 'true'
    name: Build Linux x64 Profiler
    runs-on: ubuntu-22.04

    env:
      profiler_path: ${{ github.workspace }}/src/Agent/NewRelic/Profiler
      #<other env vars here>

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Clean out _profilerBuild directory
        run: |
          rm -f ${{ github.workspace }}/src/Agent/_profilerBuild/*.* || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x64-Release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x86-Release || true
        shell: bash

      - name: Build Linux Profler
        run: |
          cd ${{ env.profiler_path }}
          docker-compose build build
          docker-compose run build
        shell: bash

      - name: Move Profiler to staging folder
        run: |
          mkdir --parents ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release/
          mv -f ${{ env.profiler_path }}/libNewRelicProfiler.so  ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release/libNewRelicProfiler.so
        shell: bash

      - name: Archive Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: profiler
          path: ${{ github.workspace }}/src/Agent/_profilerBuild/
          if-no-files-found: error

  build-linux-arm64-profiler:
    needs: [cancel-previous-workflow-runs, check]
    if: needs.check.outputs.run_job == 'true'
    name: Build Linux ARM64 Profiler
    runs-on: ubuntu-22.04
    
    env:
      profiler_path: ${{ github.workspace }}/src/Agent/NewRelic/Profiler
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Clean out _profilerBuild directory
        run: |
          rm -f ${{ github.workspace }}/src/Agent/_profilerBuild/*.* || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-x64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x64-Release || true
          rm -rf ${{ github.workspace }}/src/Agent/_profilerBuild/x86-Release || true
        shell: bash
        
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu18.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update -q -y
            apt-get install -q -y wget curl git dos2unix software-properties-common make binutils libc++-dev clang-3.9 lldb-3.9 build-essential
            echo "deb https://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main" | tee /etc/apt/sources.list.d/llvm.list
            wget --no-cache --no-cookies -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
            mkdir /root/git
            cd /root/git
            git clone --branch release/3.1 https://github.com/dotnet/coreclr.git
            curl -sSL https://virtuoso-testing.s3.us-west-2.amazonaws.com/cmake-3.9.0-rc3-aarch64.tar.gz | tar -xzC ~
            chmod 777 ~/cmake-3.9.0-rc3-aarch64/bin/cmake
            ln -s ~/cmake-3.9.0-rc3-aarch64/bin/cmake /usr/bin/cmake || true
            rm /usr/bin/cc || true
            ln -s /usr/bin/clang-3.9 /usr/bin/cc
            rm /usr/bin/c++ || true
            ln -s /usr/bin/clang++-3.9 /usr/bin/c++
          dockerRunArgs: |
            --volume "${{ env.profiler_path }}:/profiler"
          run: |
            cd /profiler
            chmod 777 ./linux/build_profiler.sh
            ./linux/build_profiler.sh

      - name: Move Profiler to staging folder
        run: |
          mkdir --parents ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release/
          mv -f ${{ env.profiler_path }}/libNewRelicProfiler.so  ${{ github.workspace }}/src/Agent/_profilerBuild/linux-arm64-release/libNewRelicProfiler.so
        shell: bash

      - name: Archive Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: profiler
          path: ${{ github.workspace }}/src/Agent/_profilerBuild/
          if-no-files-found: error
