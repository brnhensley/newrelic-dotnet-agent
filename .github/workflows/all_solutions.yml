#NOTE: This workflow has been heavily modified to just run the one test of interest for this branch (Browser Injection)

name: .NET Agent All Solutions Build

# Does not run on PUSH since we have already ran all the test
on:
  pull_request:
    branches: 
    - main
    - '**-feature-branch'
  release:
    types: [ published ]
  workflow_dispatch:
  schedule:
    - cron:  '0 9 * * *'

env:
  scripts_path: ${{ github.workspace }}\build\scripts
  tools_path: ${{ github.workspace }}\build\Tools
  DOTNET_NOLOGO: true

jobs:

  cancel-previous-workflow-runs:
    if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' || ( github.event_name == 'release' && startsWith(github.ref, 'refs/tags/v') )
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-test-browser-injection:
    needs: cancel-previous-workflow-runs
    name: Build Agent, integration tests, and run Browser Injection Test
    runs-on: windows-2022

    env:
      fullagent_solution_path: ${{ github.workspace }}\FullAgent.sln
      integration_solution_path: ${{ github.workspace }}\tests\Agent\IntegrationTests\IntegrationTests.sln
      integration_tests_shared_project: ${{ github.workspace }}/tests/Agent/IntegrationTests/Shared
      integration_tests_path: ${{ github.workspace }}/tests/Agent/IntegrationTests/IntegrationTests/bin/Release/net462
      NR_DOTNET_TEST_SAVE_WORKING_DIRECTORY : 1

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.3
            
      - name: Build FullAgent.sln
        run: |
          Write-Host "List NuGet Sources"
          dotnet nuget list source # For unknown reasons, this step is necessary to avoid subsequent problems with NuGet package restore
          Write-Host "MSBuild.exe -restore -m -p:Configuration=Release -p:AllowUnsafeBlocks=true ${{ env.fullagent_solution_path }}"
          MSBuild.exe -restore -m -p:Configuration=Release -p:AllowUnsafeBlocks=true ${{ env.fullagent_solution_path }}
        shell: powershell

      - name: Build IntegrationTests.sln
        run: |
          Write-Host "List NuGet Sources"
          dotnet nuget list source # For unknown reasons, this step is necessary to avoid subsequent problems with NuGet package restore
          Write-Host "MSBuild.exe -restore -m -p:Configuration=Release -p:DeployOnBuild=true -p:PublishProfile=LocalDeploy ${{ env.integration_solution_path }}"
          MSBuild.exe -restore -m -p:Configuration=Release -p:DeployOnBuild=true -p:PublishProfile=LocalDeploy ${{ env.integration_solution_path }}
        shell: powershell

      - name: Set up secrets
        env:
          INTEGRATION_TEST_SECRETS: ${{ secrets.TEST_SECRETS }}
        run: |
          "$Env:INTEGRATION_TEST_SECRETS" | dotnet user-secrets set --project ${{ env.integration_tests_shared_project }}
        shell: pwsh #this doesn't work with normal powershell due to UTF-8 BOM handling

      - name: Install dependencies
        run: |
          Enable-WindowsOptionalFeature -Online -FeatureName IIS-HostableWebCore
          pip install aiohttp
        shell: powershell

      - name: Run Integration Tests
        run: |
          Write-Host "Run tests"
          dotnet test ${{ env.integration_tests_path }}/NewRelic.Agent.IntegrationTests.dll --filter FullyQualifiedName~NewRelic.Agent.IntegrationTests.AgentFeatures.BrowserAgentInjection --no-build --nologo --logger "trx;LogFileName=C:\IntegrationTestWorkingDirectory\TestResults\AgentFeatures.BrowserAgentInjection_testResults.trx"
        shell: powershell

      - name: Archive IntegrationTestWorkingDirectory on Failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2.2.4
        with:
          name: integration-test-artifacts
          path: |
            C:\IntegrationTestWorkingDirectory\**\*.log
            C:\IntegrationTestWorkingDirectory\**\*.config
          if-no-files-found: error

      - name: Archive Test Artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v2.2.4
        with:
          name: integration-test-artifacts
          path: C:\IntegrationTestWorkingDirectory\TestResults\**\*TestResults.trx
          if-no-files-found: error
